from neetcode150_py.arrays_and_hashing.q36_valid_sudoku import Solution


def test_valid_sudoku() -> None:
    solution = Solution()
    assert (
        solution.isValidSudoku(
            [
                ["5", "3", ".", ".", "7", ".", ".", ".", "."],
                ["6", ".", ".", "1", "9", "5", ".", ".", "."],
                [".", "9", "8", ".", ".", ".", ".", "6", "."],
                ["8", ".", ".", ".", "6", ".", ".", ".", "3"],
                ["4", ".", ".", "8", ".", "3", ".", ".", "1"],
                ["7", ".", ".", ".", "2", ".", ".", ".", "6"],
                [".", "6", ".", ".", ".", ".", "2", "8", "."],
                [".", ".", ".", "4", "1", "9", ".", ".", "5"],
                [".", ".", ".", ".", "8", ".", ".", "7", "9"],
            ]
        )
        is True
    )

    assert (
        solution.isValidSudoku(
            [
                ["8", "3", ".", ".", "7", ".", ".", ".", "."],
                ["6", ".", ".", "1", "9", "5", ".", ".", "."],
                [".", "9", "8", ".", ".", ".", ".", "6", "."],
                ["8", ".", ".", ".", "6", ".", ".", ".", "3"],
                ["4", ".", ".", "8", ".", "3", ".", ".", "1"],
                ["7", ".", ".", ".", "2", ".", ".", ".", "6"],
                [".", "6", ".", ".", ".", ".", "2", "8", "."],
                [".", ".", ".", "4", "1", "9", ".", ".", "5"],
                [".", ".", ".", ".", "8", ".", ".", "7", "9"],
            ]
        )
        is False
    )

    assert (
        solution.isValidSudoku(
            [
                [".", "8", "7", "6", "5", "4", "3", "2", "1"],
                ["2", ".", ".", ".", ".", ".", ".", ".", "."],
                ["3", ".", ".", ".", ".", ".", ".", ".", "."],
                ["4", ".", ".", ".", ".", ".", ".", ".", "."],
                ["5", ".", ".", ".", ".", ".", ".", ".", "."],
                ["6", ".", ".", ".", ".", ".", ".", ".", "."],
                ["7", ".", ".", ".", ".", ".", ".", ".", "."],
                ["8", ".", ".", ".", ".", ".", ".", ".", "."],
                ["9", ".", ".", ".", ".", ".", ".", ".", "."],
            ]
        )
        is True
    )


def test_valid_sudoku1() -> None:
    solution = Solution()
    assert (
        solution.isValidSudoku1(
            [
                ["5", "3", ".", ".", "7", ".", ".", ".", "."],
                ["6", ".", ".", "1", "9", "5", ".", ".", "."],
                [".", "9", "8", ".", ".", ".", ".", "6", "."],
                ["8", ".", ".", ".", "6", ".", ".", ".", "3"],
                ["4", ".", ".", "8", ".", "3", ".", ".", "1"],
                ["7", ".", ".", ".", "2", ".", ".", ".", "6"],
                [".", "6", ".", ".", ".", ".", "2", "8", "."],
                [".", ".", ".", "4", "1", "9", ".", ".", "5"],
                [".", ".", ".", ".", "8", ".", ".", "7", "9"],
            ]
        )
        is True
    )

    assert (
        solution.isValidSudoku1(
            [
                ["8", "3", ".", ".", "7", ".", ".", ".", "."],
                ["6", ".", ".", "1", "9", "5", ".", ".", "."],
                [".", "9", "8", ".", ".", ".", ".", "6", "."],
                ["8", ".", ".", ".", "6", ".", ".", ".", "3"],
                ["4", ".", ".", "8", ".", "3", ".", ".", "1"],
                ["7", ".", ".", ".", "2", ".", ".", ".", "6"],
                [".", "6", ".", ".", ".", ".", "2", "8", "."],
                [".", ".", ".", "4", "1", "9", ".", ".", "5"],
                [".", ".", ".", ".", "8", ".", ".", "7", "9"],
            ]
        )
        is False
    )

    assert (
        solution.isValidSudoku1(
            [
                [".", "8", "7", "6", "5", "4", "3", "2", "1"],
                ["2", ".", ".", ".", ".", ".", ".", ".", "."],
                ["3", ".", ".", ".", ".", ".", ".", ".", "."],
                ["4", ".", ".", ".", ".", ".", ".", ".", "."],
                ["5", ".", ".", ".", ".", ".", ".", ".", "."],
                ["6", ".", ".", ".", ".", ".", ".", ".", "."],
                ["7", ".", ".", ".", ".", ".", ".", ".", "."],
                ["8", ".", ".", ".", ".", ".", ".", ".", "."],
                ["9", ".", ".", ".", ".", ".", ".", ".", "."],
            ]
        )
        is True
    )

    assert (
        solution.isValidSudoku1(
            [
                [".", ".", ".", ".", "5", "5", ".", "1", "."],
                [".", "4", ".", "3", ".", ".", ".", ".", "."],
                [".", ".", ".", ".", ".", "3", ".", ".", "1"],
                ["8", ".", ".", ".", ".", ".", ".", "2", "."],
                [".", ".", "2", ".", "7", ".", ".", ".", "."],
                [".", "1", "5", ".", ".", ".", ".", ".", "."],
                [".", ".", ".", ".", ".", "2", ".", ".", "."],
                [".", "2", ".", "9", ".", ".", ".", ".", "."],
                [".", ".", "4", ".", ".", ".", ".", ".", "."],
            ]
        )
    ) is False

    assert (
        solution.isValidSudoku1(
            [
                ["8", "3", ".", ".", "7", ".", ".", ".", "."],
                ["6", ".", ".", "1", "7", "5", ".", ".", "."],
                [".", "9", "8", ".", ".", ".", ".", "6", "."],
                ["8", ".", ".", ".", "6", ".", ".", ".", "3"],
                ["4", ".", ".", "8", ".", "3", ".", ".", "1"],
                ["7", ".", ".", ".", "2", ".", ".", ".", "6"],
                [".", "6", ".", ".", ".", ".", "2", "8", "."],
                [".", ".", ".", "4", "1", "9", ".", ".", "5"],
                [".", ".", ".", ".", "8", ".", ".", "7", "9"],
            ]
        )
        is False
    )

    assert (
        solution.isValidSudoku1(
            [
                ["5", "3", ".", ".", "7", ".", ".", ".", "."],
                ["6", ".", ".", "1", "9", "5", ".", ".", "."],
                [".", "9", "8", ".", ".", ".", ".", "6", "."],
                ["8", ".", ".", ".", "6", ".", ".", ".", "3"],
                ["4", "9", ".", "8", ".", "3", ".", ".", "1"],
                ["7", ".", ".", ".", "2", ".", ".", ".", "6"],
                [".", "6", ".", ".", ".", ".", "2", "8", "."],
                [".", ".", ".", "4", "1", "9", ".", ".", "5"],
                [".", ".", ".", ".", "8", ".", ".", "7", "9"],
            ]
        )
        is False
    )

    assert (
        solution.isValidSudoku1(
            [
                ["5", "3", "9", ".", "7", ".", ".", ".", "."],
                ["6", ".", ".", "1", "9", "5", ".", ".", "."],
                [".", "9", "8", ".", ".", ".", ".", "6", "."],
                ["8", ".", ".", ".", "6", ".", ".", ".", "3"],
                ["4", ".", ".", "8", ".", "3", ".", ".", "1"],
                ["7", ".", ".", ".", "2", ".", ".", ".", "6"],
                [".", "6", ".", ".", ".", ".", "2", "8", "."],
                [".", ".", ".", "4", "1", "9", ".", ".", "5"],
                [".", ".", ".", ".", "8", ".", ".", "7", "9"],
            ]
        )
        is False
    )
